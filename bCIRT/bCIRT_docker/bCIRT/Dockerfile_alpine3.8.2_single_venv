# pull official base image
#FROM python:3.8.2-buster
FROM python:3.8.2-alpine

# set work directory

WORKDIR /bCIRT/var/www/bCIRT/

# set environment variables
ENV PYTHONDONTWRITEBYTECODE 1
ENV PYTHONUNBUFFERED 1

# install psycopg2 dependencies
RUN apk update \
    && apk add nano postgresql-dev gcc python3-dev musl-dev \
    libffi-dev build-base py2-pip python2-dev

RUN mkdir -p /bCIRT/venvs/
WORKDIR /bCIRT/venvs
RUN python3 -m venv django_venv
RUN ls -l /bCIRT/venvs/django_venv/bin/
ENV VIRTUAL_ENV=/bCIRT/venvs/django_venv
# install dependencies
RUN source $VIRTUAL_ENV/bin/activate && $VIRTUAL_ENV/bin/pip3 install --upgrade pip wheel
# wget https://github.com/bl305/bCIRT/raw/master/bCIRT_PackageReleases/0113_bCIRT_v203_20200418.zip
COPY ./requirements.txt /bCIRT/var/www/bCIRT/requirements.txt
RUN source $VIRTUAL_ENV/bin/activate && $VIRTUAL_ENV/bin/pip3 install --no-cache-dir -r /bCIRT/var/www/bCIRT/requirements.txt

# copy entrypoint.sh
COPY ./entrypoint.sh /bCIRT/var/www/bCIRT/entrypoint.sh

# copy project
COPY . /bCIRT/var/www/bCIRT/

WORKDIR /bCIRT/var/www/bCIRT/
#RUN ["chmod", "+x", "/bCIRT/var/www/bCIRT/entrypoint.sh"]
#RUN pwd && ls -l && ls -l /bCIRT/venvs/django_venv/bin/
# RUN ls -l /bCIRT/var/www/bCIRT/manage.py && whoami
ENV PATH="$VIRTUAL_ENV/bin:$PATH"
# run entrypoint.sh
ENTRYPOINT ["/bCIRT/var/www/bCIRT/entrypoint.sh"]
